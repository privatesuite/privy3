<%

	const issue = db.elements.findElement(_ => (_.fields.title || "").startsWith(`Issue ${params.issue}`));

	let issueId = issue.fields.content.indexOf("embed.html?d=") === -1 ? undefined : issue.fields.content.slice(issue.fields.content.indexOf("embed.html?d=") + 13, issue.fields.content.indexOf("&amp;u="));

	seo.title = issue.fields.title;

	function page () {

		if (!params.page) return 1;
		else if (!params.page.trim() || isNaN(params.page)) return 1;
		else return parseInt(params.page);

	}

	if (issueId) seo.image = `https://${(await getReader(issueId)).pages[page() - 1].imageUri}`;
	if (removeHTMLTags(issue.fields.content).trim()) seo.description = removeHTMLTags(issue.fields.content).trim();

%>

<!DOCTYPE html>
<html lang="en">
<head>

	<% include include/seo/standard.ejs %>
	<% include include/head.ejs %>

</head>
<body>

	<% include include/menu.ejs %>

	<div class="app">

		<div class="section">

			<h1><%- issue.fields.title %></h1>

			<%- issue.fields.content.replace("[PAGE]", params.page || "1") %>

		</div>

	</div>

	<% include include/footer.ejs %>

</body>
</html>
